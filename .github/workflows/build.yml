# This workflow will build a Java project with Gradle
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

on:
  push:
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:
    environment: CIRelease
    strategy:
      fail-fast: false
      matrix:
        java: [ '17' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.os }}
    permissions:
      checks: write
      pull-requests: write
    name: Build & Test with Java ${{ matrix.Java }} (${{ matrix.os }})
    steps:
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --all --tags

      - name: Create .gradle dir
        run: mkdir -p $HOME/.gradle

      - name: Build and test with Gradle
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=true"
        run: ./gradlew test build --stacktrace --scan

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: build/test-results/**/*.xml
