plugins {
    // project plugins
    id 'java'
    id 'java-gradle-plugin'
    id 'groovy'
    // test coverage
    id 'jacoco'

    // ide plugin
    id 'idea'
    id 'eclipse'

    // intershop test plugin
    id 'com.intershop.gradle.test' version '2.4.0'

    // plugin for publishing to Gradle Portal
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.10.0'

    // plugin for publishing to jcenter
    id 'com.jfrog.bintray' version '1.8.4'
}

// release configuration
group = 'com.intershop.gradle.architectural.report'
description 'Gradle architectural report plugin'

// adapt external loading at ArchitectureReportPlugin and README.md too
version = '1.2.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// set correct project status
if (project.version.endsWith('-SNAPSHOT')) {
    status = 'snapshot'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task groovydocJar(type: Jar) {
    dependsOn groovydoc
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

// additional sources artifact
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        intershopMvn(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            artifact groovydocJar {
                classifier "javadoc"
            }

            pom.withXml {
                def Node root = asNode();
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', "https:/github.com/IntershopCommunicationsAG/${project.name}")

                def scm = root.appendNode( 'scm' )
                scm.appendNode( 'url', "https://github.com/IntershopCommunicationsAG/${project.name}")
                scm.appendNode( 'connection', "scm:git:https://github.com/IntershopCommunicationsAG/${project.name}.git")

                def org = root.appendNode( 'organization' )
                org.appendNode( 'name', 'Intershop Communications' )
                org.appendNode( 'url', 'http://intershop.com' )

                def license = root.appendNode( 'licenses' ).appendNode( 'license' );
                license.appendNode( 'name', 'Apache License, Version 2.0' )
                license.appendNode( 'url', 'http://www.apache.org/licenses/LICENSE-2.0' )
                license.appendNode( 'distribution', 'repo' )
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'intershopcommunicationsag'

        licenses = ['Apache-2.0']
        vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"

        desc = project.description
        websiteUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
        issueTrackerUrl = "https://github.com/IntershopCommunicationsAG/${project.name}/issues"

        labels = ['intershop', 'gradle', 'plugin', 'validation', 'analysis']
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released  = new Date()
            vcsTag = project.version
        }

        publications = ['intershopMvn']
    }
}

pluginBundle {
    website = "https://github.com/IntershopCommunicationsAG/${project.name}"
    vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
    description = project.description
    tags = ['intershop', 'gradle', 'plugin', 'validation', 'analysis']

    plugins {
        gradleTestPlugin {
            id = 'com.intershop.gradle.architectural.report'
            displayName = project.description
        }
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.ow2.asm:asm:7.0'
    compile 'javax.inject:javax.inject:1'
    compile 'commons-io:commons-io:2.6'
    compile 'com.typesafe.akka:akka-actor_2.11:2.5.19'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'

    runtime 'com.typesafe.akka:akka-remote_2.11:2.5.19'
    runtime 'org.apache.cxf:cxf-rt-rs-client:3.1.17'
    runtime 'org.apache.cxf:cxf-rt-transports-http:3.1.17'
    runtime 'org.apache.cxf:cxf-rt-transports-local:3.1.17'
    runtime 'ch.qos.logback:logback-classic:1.2.3'

    testCompile 'junit:junit:4.12'
    testCompile 'com.typesafe.akka:akka-testkit_2.11:2.5.19'
}

repositories {
    jcenter()
}
